#from __future__ import absolute_import

from pdfparser  import process_file
from collections import  OrderedDict
from log import logger 



log = logger(__file__)





### Python Dict object for Storing recently analysed files

class LruCache(OrderedDict):

      def __init__(self,maxSize=100):
         OrderedDict.__init__(self)
         self.maxSize = maxSize

      def __setitem__(self, key, value, dict_setitem=OrderedDict.__setitem__):

        if  len(self) > self.maxSize-1:
            self.popitem(last=False)
        return dict_setitem(self, key, value)




def scan_static(filename):
    """
        return scan results

    """  
    try: 
       cache = LruCache()   

       if filename in cache.keys(): 
          return cache[filename] 
       else:
  
         result =   process_file(filename) 
         cache[filename] =  result

       assert type(result) is int 
       return result

    except Exception, e:
        log.error('Error in file Parsing', exc_info=True) 
            



def scan_dynamic(filename):
    """
       
       dynamic scan of file

    """


      

        
 
if __name__=="__main__":

    print scan_static('/home/sandeep/tools/celery/samle.pdf')

