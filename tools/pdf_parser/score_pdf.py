# Generated Heurisitic Score of a file

import sys,os
import re

parent = None






def process_obj_reference(stat,score,depth,parent,child):
   key  = parent
   key1 = child
   #print parent,child
   objref = filter(lambda x:re.search(' R',x),stat[key])
   objs = []
   if depth == 0:
      for ref in objref:
          
          
          obj = stat[key][ref] 
         
          if 'isObfuscated' in stat[obj] and  stat[obj]['Jscript_objects'] > 0:
                score += 2
          elif 'EmbeddedFile' in stat[obj]['Type']:
                score += 1
          elif 'Multiple_Filters' in stat[obj] and 'isJS' in stat[parent]:
                score += 3
          elif 'Multiple_Filters' in stat[obj] and 'isObfuscated' in stat[obj] and 'isJS' in stat[parent]:
                score += 4
          objs.append(obj)
   elif depth == 1:
         
         if ('Page' or 'Annot') in stat[parent]['Type'] and 'isJslarge' in stat[child] and stat[child]['Jscript_objects'] > 1:
                score += 3
         elif 'isJS'  in stat[parent]  and 'Multiple_Filters' in stat[child] and 'isJS' in stat[child]:
                score += 3
             
         elif 'isJS'  in stat[parent]  and 'Suspicious_Js' in stat[child] and stat[child]['Jscript_objects'] > 1:
                score += 3 
   #print objs
   return score,objs

def  gen_pdf_file_score(stats):
     """
       process object dictionary to 
       generate PDF score 
         
       rating----->  0       10

     """
   
     """
     1)   plot relation between multiple object referrences  
     """
     score = 0 
    
     susp_Type = False
     Jscript   = False 
     for key in  stats:
            #print score
            #print stats[key],key
            susp_Type = False
            Jscript   = False 
            if 'isJS' in  stats[key]: Jscript = True 
            if  ('OpenAction'  in  stats[key]['Type'] or 'XFA' in  stats[key]['Type'] or 'Page' in  stats[key]['Type']): susp_Type = True
            if (Jscript or susp_Type)  and 'obj_ref' in stats[key]:
                      if 'isObfuscated' in  stats[key] and  stats[key]['Jscript_objects'] > 0:
                             score+=3
                      if   'JS' in  stats[key]['Type']  and 'Jscript_objects' in  stats[key]: 
                             score += 1

                      if 'Suspicious_Js' in  stats[key] and  stats[key]['Jscript_objects'] > 0:
                             score+=3
                      args = (key, 0) 
                      score,objs = process_obj_reference(stats,score,0,*args)
                      for   refobj in objs:
                            args = (key,refobj)
                            score,objs = process_obj_reference(stats,score,1,*args) 
            elif 'EmbeddedFile' and 'Filter' in stats[key]['Type'] and 'Suspicious_Js' in stats[key]: 
                 score += 2
            elif 'Suspicious_Js' in stats[key] and ( 'isJslarge' in stats[key] or  stats[key]['Jscript_objects'] >= 1):
                 score += 3 
            elif 'isObfuscated' in stats[key] and  'Jscript_objects' in  stats[key] and stats[key]['Jscript_objects'] >= 1: 
                 score += 2
            elif 'Jscript_objects' in  stats[key] and stats[key]['Jscript_objects'] > 1 and 'Type_unknown' in stats[key]:
                  score += 2
            elif 'html_evasion' in  stats[key] and stats[key]['html_count'] >=2: 
                  score += 2
            elif 'isObfuscated' in  stats[key] and (Jscript or susp_Type) and 'isJslarge' in stats[key] and  stats[key]['Jscript_objects'] >= 1:
                  score += 3 
            elif 'Embedded_File' in  stats[key] and 'Type_unknown' in stats[key]:
                  score += 2   
            if  score > 5:
                break  
     return score               


