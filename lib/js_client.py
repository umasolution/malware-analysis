import subprocess
import time
import os
import json
import re
import spidermonkey
import enchant

class js_Class():

	def __init__(self, file_name, md5):
		self.filename = file_name
		self.md5 = md5
		self.fun = ['String', 'eval']
		self.rt = spidermonkey.Runtime()
		self.cx = self.rt.new_context()

		with open("report/"+self.md5+"/"+self.filename) as file1:
			self.data1 = file1.readlines()

		with open('data/string_sig/malware_js') as malware:
			self.mal=malware.read().splitlines()

	def find_between(self, s, first, last ):
    		try:
        		start = s.index( first ) + len( first )
        		end = s.index( last, start )
        		return s[start:end]
    		except ValueError:
       			return ""

	def find_dict(self, w):
		d = enchant.Dict("en_US")
		self.r_value = d.check(w)
		return self.r_value
		

	def js_Score(self):
		get_score = self.js_scan()
		return get_score


	def js_scan(self):
		self.score = 1
		for data in self.data1:
			for fun1 in self.fun:
				f = re.search(r'(var.*=\'.*\';)', data)
				if f:
					f = re.search(r'(var.*=\'.*\';)', data).group(0)
					output1 = self.cx.execute(f)
					dfg = re.search(r'('+fun1+'.*\()', data)
					if dfg:
						for mal in self.mal:
							f_dict = re.search(r'('+mal+')', output1)
							if f_dict:
								self.score = 3
								#return self.score

				#f1 = re.search(r'('+ fun1  +'.*\(.*[a-zA-Z0-9]\);)', data)
				f3 = re.findall(r'('+ fun1  +'.*\(.*[a-zA-Z0-9]\);)', data)
				if f3:
					for f1 in f3:
						f2 = re.search(r'('+ fun1  +'.*\(.*[a-zA-Z0-9]\);)', data).group(0)
						df = re.search(r'\(.*\)', f2).group(0)
						match_str = re.sub(r'^\(|\)$', '', df)
						f_dict = self.find_dict(match_str)
						if not f_dict:
							self.score = 3
							#return self.score
				else:
					df3 = re.findall(r'('+fun1+'.*\()', data)
					if df3:
						for df in df3:
							df1 = self.find_between( data, "(", ");" )
							output2 = self.cx.execute(df1)
							f_dict = self.find_dict(output2)
							if not f_dict:
								self.score = 3
								#return self.score

		return self.score

if __name__ == "__main__":
	res = js_Class('index.html.js', '31c032f34f1c2561488e898c451e0666')
	status = res.js_Score()		
	print status

