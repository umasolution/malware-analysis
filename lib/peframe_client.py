import subprocess
import time
import os
import json
from urlparse import urlparse


class peframe_Class():

	def __init__(self, file_name, md5):
		self.filename = file_name
		self.filepath = "report/"+md5+"/"+file_name
		self.reportpath = "report/"+md5+"/"+file_name+"_pe.json"
		self.peframe_scan()
		self.check_sup = 1
                self.check_clean = 1

	def check_url(self, data):
        	o = urlparse(data)
        	url = o.netloc
        	url1 = o.geturl()

        	if url in open('data/urlblock.list').read():
                	check_url1 = 3
                	check_next = 0
                	return check_url1
                	sys.exit()
        	else:
                	check_url1 = 1

        	if url1 in open('data/urlblock.list').read():
                	check_url1 = 3
                	check_next = 0
                	return check_url1
                	sys.exit()
        	else:
                	check_url1 = 1

        	return check_url1


	def peframe_scan(self):
        	os.system("python tools/peframe/peframe.py --json " + self.filepath + " > " + self.reportpath )

	def get_Score(self):
		with open(self.reportpath) as config_data:
        		cfg = json.load(config_data)

		section1 = cfg['pe_info']['sections_info'][0]['suspicious']
		section2 = cfg['pe_info']['sections_info'][1]['suspicious']
		section3 = cfg['pe_info']['sections_info'][2]['suspicious']
		
		results = []	
		if section1 or section2 or section3:
			self.result = 3
			results.append(3)
		else:
			self.result = 1
			results.append(1)
		
		antivm = cfg['pe_info']['antivm_info']

		if antivm:
        		self.result = 3
			results.append(3)
       		else:
			self.result = 1
			results.append(1)

		detected = cfg['pe_info']['detected']
		if detected:
        		self.result = 2
			results.append(2)
		else:
			self.result = 1
			results.append(1)

		antidbg_info = cfg['pe_info']['antidbg_info']
		if antidbg_info:
        		self.result = 2
			results.append(2)
		else:
			self.result = 1
			results.append(1)


		xor_info = cfg['pe_info']['xor_info']
		if xor_info:
        		self.result = 2
			results.append(2)
		else:
			self.result = 1
			results.append(1)

		meta_info = cfg['pe_info']['meta_info']
		if meta_info:
        		self.result = 2
			results.append(2)
		else:
			self.result = 1
			results.append(1)

		for res in results:
			if res == 3:
				self.result = 3
				self.check_sup = 2
				self.check_clean = 2
			
			if self.check_sup == 1:	
				if res == 2:
					self.result = 2
					self.check_clean = 2

			if self.check_clean == 1:
				if res == 1:
					self.result = 0

		return self.result
		

if __name__ == "__main__":
	res = peframe_Class('malware1', '31c032f34f1c2561488e898c451e0666')
	print res.get_Score()	
