import subprocess
import time
import os
import json
from startup_verify_mac import Startup_Scann
from swf_client import swf_Class
import re
import logfile

logger = logging.getLogger('pdf')

class pdf_Class():

	def __init__(self, filename, md5):
                self.filename = filename
                self.filepath = "report/"+md5+"/"+filename
                self.md5 = md5
                self.reportpath = "report/"+md5+"/"+filename + "_rtf"


	def pdf_parser(self):
                os.system("echo pyxswf.py result for file " + self.filepath + " > "+ self.reportpath+"_pdf_swf")
                os.system("python tools/oletools/pyxswf.py -x " + self.filepath + " >> "+ self.reportpath+"_pdf_swf")
        	self.file_score = subprocess.check_output("tools/pdf_parser/pdfparser.py "+ self.filepath, shell=True)
		return self.file_score
	

	def pdf_Score(self):
		self.file_score = int(self.pdf_parser())

		if self.file_score == 0:
			self.result = 1
		elif self.file_score == 1:
			self.result = 2
		elif self.file_score == 2:
			self.result = 2
		else:
			self.result = 3


                with open(self.reportpath+"_pdf_swf") as f:
                        data = f.readlines()
                        for lines in data:
                                print lines
                                match = re.search(r'(.*MD5: [A-F0-9]+).*',lines)
                                if match:
                                        self.result = 2
                                        data1 = match.group(0).split(' ')[4]
                                        os.system("mv "+data1+ " report/"+self.md5+"/")
                                        md5_1 = hashlib.md5(open("report/"+self.md5+"/"+data1).read()).hexdigest()
                                        get_value = Startup_Scann(md5_1)
                                        status = get_value.find_mac()
                                        if status == 3:
                                                self.result = 3

                                        swf = swf_Class(self.filename, self.md5)
                                        status = swf.swf_Score()
                                        if status == 3:
                                                self.result = 3

		
		return self.result
		

if __name__ == "__main__":
	res = pdf_Class('pdf-jsEval.file', '31c032f34f1c2561488e898c451e0666')
	print res.pdf_Score()
