import magic
import os
import sys
import re
from urlparse import urlparse

class string_Scan():
	def __init__(self, filepath, md5):
		self.filepath = filepath
		self.md5 = str(md5)
		self.status = 1 
		self.get_details()
		self.ips = []
		self.status = 1

	def get_details(self):
		os.system("strings "+ self.filepath + " > report/"+self.md5+"/string.info")

	def find_string(self):
                with open("report/"+self.md5+"/string.info", 'r') as f:
                        fdata = f.read().rstrip()
			for line in fdata:
                        	datafile = file('data/malware_string')
                        	for line in datafile:
                        		self.status = 2
               	return self.status 


	def find_ip(self):
                with open("report/"+self.md5+"/string.info", 'r') as f:
                        fdata = f.read().rstrip()

                ips = re.findall(r"\d{1,3}(?:\.\d{1,3}){3}", fdata)
                for ip in ips:
                        datafile = file('data/ipblock.list')
                        for line in datafile:
                                if ip in line:
                                        self.status = 3

                return self.status


	def find_url(self):
		check = True
		with open("report/"+self.md5+"/string.info", 'r') as myfile:
        		data=myfile.read().replace('\n', '')

                urls = re.findall('http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+', data)

                for url in urls:
                        o = urlparse(url)
                        url_full = o.geturl()
                        domain = o.netloc
			
                        datafile = file('data/urlblock.list')
                        for line in datafile:
                                if url_full in line:
                                        self.status = 3
					check = False
			if check:
                        	datafile = file('data/urlblock.list')
                        	for line in datafile:
                                	if domain in line:
						self.status = 3

                return self.status

	def all_scan(self):
		final_status = []
		check = True
		status = self.find_string()
		final_status.append(status)

		status = self.find_ip()
		final_status.append(status)

		status = self.find_url()
		final_status.append(status)

        	for status in final_status:
                	if status == 3:
                        	status = 3
                        	check = False
                	if check:
                        	if status == 2:
                                	status = 2
                                	check = False
                	if check:
                        	if status == 1:
                                	status = 1

		return status


if __name__ == "__main__":
	res = string_Scan('/home/versa/task/sample1.doc', 'acc9f0271432b4d14e0fe4913dc8e62e')
#	match = re.search(r'(\d+-\d+-\d+)','Creation date: 2000-11-24 03:32:13')
#	date =  match.group(1)
	print res.all_scan() 

