import subprocess
import time
import os
import json
from startup_verify_mac import Startup_Scann
from swf_client import swf_Class
import re
import hashlib

class ole_Class():

	def __init__(self, file_name, md5):
		self.filename = file_name
		self.filepath = "report/"+ md5 +"/"+ file_name
		self.reportpath = "report/"+ md5 +"/"+ file_name +".report"
		self.md5 = md5
		self.ole_scan()
		self.file_suffix = file_name.split('.')[0]

	def ole_Score(self):
		self.res = int(subprocess.call(['grep', 'SUSPICIOUS', self.reportpath]))
		if self.res == 0:
        		self.result = 2
		elif self.res == 1:
        		self.result = 1
		else:
        		self.result = error


                with open(self.reportpath+"_OMS") as f:
                        data = f.readlines()
			
                        for line in data:
                                s = re.search(r'('+self.file_suffix+'_.*\.bin)', line)
                                if s:
                                        docname = s.group(0)
                                        os.system("mv "+docname+" report/"+self.md5+"/")
                                        md5_1 = hashlib.md5(open("report/"+self.md5+"/"+docname).read()).hexdigest()
                                        get_value = Startup_Scann(md5_1)
                                        status = get_value.find_mac()
                                        self.result = 2
                                        if status == 3:
                                                self.result = 3


		self.res = int(subprocess.call(['grep', 'seems to be malicious', self.reportpath+"_OMS"]))
                if self.res == 0:
                        self.result = 3

		with open(self.reportpath+"_swf") as f:
        		data = f.readlines()
        		for lines in data:
                		print lines
                		match = re.search(r'(.*MD5: [A-F0-9]+).*',lines)
                		if match:
					self.result = 2
                        		data1 = match.group(0).split(' ')[4]
					os.system("mv "+data1+ " report/"+self.md5+"/")
					md5_1 = hashlib.md5(open("report/"+self.md5+"/"+data1).read()).hexdigest()
					get_value = Startup_Scann(md5_1)
	        			status = get_value.find_mac()
					if status == 3:
						self.result = 3 

					swf = swf_Class(self.filename, self.md5)
                        		status = swf.swf_Score()
					if status == 3:
						self.result = 3
					

		return self.result

	def ole_scan(self):
		os.system("echo mraptor.py result for file " + self.filepath + " >> "+ self.reportpath )
		os.system("python tools/oletools/mraptor.py  " + self.filepath + " | sed 1d | sed 1d >> "+ self.reportpath)
		os.system("echo olevba.py result for file " + self.filepath + " >> "+ self.reportpath)
		os.system("python tools/oletools/olevba.py " + self.filepath + " >> "+ self.reportpath)
		os.system("echo oletimes.py result for file " + self.filepath + " >> "+ self.reportpath)
		os.system("python tools/oletools/oletimes.py " + self.filepath + " >> "+ self.reportpath)
		os.system("echo olemeta.py result for file " + self.filepath + " >> "+ self.reportpath)
		os.system("python tools/oletools/olemeta.py " + self.filepath + " >> "+ self.reportpath)
		os.system("echo pyxswf.py result for file " + self.filepath + " > "+ self.reportpath+"_swf")
		os.system("python tools/oletools/pyxswf.py -x " + self.filepath + " >> "+ self.reportpath+"_swf")  
		os.system("echo OfficeMalScanner result for file " + self.filepath + " > "+ self.reportpath+"_OMS")
		os.system("wine tools/rtscanner/OfficeMalScanner.exe " + self.filepath + " scan >> "+ self.reportpath+"_OMS")  

	

if __name__ == "__main__":
	rep = ole_Class('sample1.doc', '31c032f34f1c2561488e898c451e0666')
	report = rep.ole_Score()	
	print report
